 <script>
   
const socket = io();

function addProduct() {
  Swal.fire({
    title: 'Agregar Producto',
    html: `
      <input type="text" id="swal-title" class="swal2-input" placeholder="Título">
      <input type="number" id="swal-price" class="swal2-input" placeholder="Precio">
      <input type="text" id="swal-code" class="swal2-input" placeholder="Código del Producto">
      <input type="text" id="swal-description" class="swal2-input" placeholder="Descripción del Producto">
      <input type="number" id="swal-stock" class="swal2-input" placeholder="Stock del Producto">
      <select id="swal-category" class="swal2-select">
        <option value="">Seleccione una categoría</option>
        <option value="perifericos">Periféricos</option> 
        <option value="monitores">Monitores</option> 
        <option value="laptops">Laptops</option> 
        <option value="audio">Audio</option> 
        <option value="almacenamiento">Almacenamiento</option> 
        <option value="componentes">Componentes</option> 
      </select>
    `,
    confirmButtonText: 'Agregar',
    showCancelButton: true,
    cancelButtonText: 'Cancelar',
    preConfirm: () => {
      // Recoger todos los valores de los inputs
      const title = document.getElementById('swal-title').value;
      const price = document.getElementById('swal-price').value;
      const code = document.getElementById('swal-code').value;
      const description = document.getElementById('swal-description').value;
      const stock = document.getElementById('swal-stock').value;
      const category = document.getElementById('swal-category').value;

      // Validación de campos
      if (!title || !price || !code || !description || !stock || !category) {
        Swal.showValidationMessage('Todos los campos son obligatorios');
        return false;
      }

      // Retornar el objeto con todos los datos del producto
      return { title, price, code, description, stock, category };
    }
  }).then((result) => {
    if (result.isConfirmed) {
      // Obtener los valores retornados y emitirlos al servidor
      const { title, price, code, description, stock, category } = result.value;
      socket.emit('addProduct', { title, price, code, description, stock, category });

      // Mostrar mensaje de éxito
      Swal.fire('Éxito', 'Producto agregado correctamente', 'success');
    }
  });
}


function createProduct() {
  const title = document.getElementById('title').value;
  const price = document.getElementById('price').value;
  const code = document.getElementById('code').value;
  if (!title || !price || !code) {
    Swal.fire('Error', 'Todos los campos son obligatorios', 'error');
    return;
  }
  socket.emit('addProduct', { title, price, code });
  Swal.fire('Éxito', 'Producto agregado correctamente', 'success');
}

function deleteProduct(id) {
  Swal.fire({
  title: "¿Desea eliminar el producto?",
  text: "No podrá recuperar este archivo",
  icon: "warning",
  showCancelButton: true,
  confirmButtonColor: "#3085d6",
  cancelButtonColor: "#d33",
  confirmButtonText: "Si",
  cancelButtonText: "No"
}).then((result) => {
  if (result.isConfirmed) {
  socket.emit('deleteProduct', id);
    Swal.fire({
      title: "Eliminado!",
      text: "El producto ah sido eliminado.",
      icon: "success"
    });
  }
});
}

function limpiarFormulario() {
  document.getElementById('title').value = '';
  document.getElementById('price').value = '';
  document.getElementById('code').value = '';
} 

socket.on('updateProducts', (products) => {
  const productList = document.getElementById('product-list');
  productList.innerHTML = `
    <thead>
      <tr> 
        <th>Título</th>
        <th>Precio</th>
        <th>Stock</th>
        <th>Categoria</th>
        <th>Descripcion</th>
        <th>Acciones</th>
      </tr>
    </thead>
    <tbody>
    </tbody>
  `;

  const tbody = productList.querySelector('tbody');
  products.forEach(product => {
    tbody.innerHTML += `
      <tr> 
        <td>${product.title}</td>
        <td>$${product.price}</td>
        <td>${product.stock}</td>
        <td>${product.category}</td>
        <td>${product.description}</td>

        <td>
          <button onclick="deleteProduct(${product.id})">Eliminar</button>
        </td>
      </tr>
    `;
  });

  limpiarFormulario();
});
 
 </script>
  <div class="container mx-auto p-6">
    <h1 class="mb-4 text-4xl font-extrabold leading-none text-center tracking-tight text-gray-900 md:text-5xl lg:text-6xl dark:text-white">Productos</h1>
 
 
    <!-- Tabla de productos -->
    <button onclick="addProduct()"  type="button" class="py-2.5 px-5 me-2 mb-2 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-100 dark:focus:ring-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700"">Agregar producto</button>
      <div class=" shadow-lg rounded-xl overflow-hidden mt-4">
<div class="relative overflow-x-auto shadow-md sm:rounded-lg">
    <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
        <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
            <tr>
              <th class="px-6 py-3 text-left text-sm font-medium uppercase tracking-wider">ID</th>
              <th class="px-6 py-3 text-left text-sm font-medium uppercase tracking-wider">Título</th>
              <th class="px-6 py-3 text-left text-sm font-medium uppercase tracking-wider">Precio</th>
              <th class="px-6 py-3 text-left text-sm font-medium uppercase tracking-wider">Acciones</th>
            </tr>
          </thead>
          <tbody class=" divide-y divide-gray-200    ">
            {{#each products}}
              <tr class="hover:bg-gray-50 hover:bg-gray-50 dark:hover:bg-gray-600">
                <td class="px-6 py-4 text-sm text-gray-500 ">{{this.id}}</td>
                <td class="px-6 py-4 text-sm text-gray-500 ">{{this.title}}</td>
                <td class="px-6 py-4 text-sm text-gray-500 ">$ {{this.price}}</td>
                <td class="px-6 py-4 text-sm text-gray-500 ">
                <button onclick="deleteProduct({{this.id}})" class="bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-400">
                  <i class="fa-solid fa-trash"></i> Eliminar
                </button>
                <button onclick="editProduct({{this.id}})" class="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-green-400">
                  <i class="fa-solid fa-pen-to-square"></i> Editar
                </button>

                </td>
              </tr>
            {{/each}}
          </tbody>
        </table>
      </div>
    </div>
  </div>
 