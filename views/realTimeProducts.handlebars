<script>
   
const socket = io();
 
 
function addProduct() {
  Swal.fire({
    title: 'Agregar Producto',
    html: `
      <div class="bg-white p-6 rounded-lg shadow-md max-w-md mx-auto">
        <div class="space-y-4">
           
          <div class="mb-4">
            <label for="swal-title" class="block text-sm font-medium text-gray-700 mb-1">Título</label>
            <input type="text" id="swal-title" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" placeholder="Título del producto">
          </div>

           
          <div class="mb-4">
            <label for="swal-price" class="block text-sm font-medium text-gray-700 mb-1">Precio</label>
            <input type="number" id="swal-price" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" placeholder="0.00">
          </div>

           
          <div class="mb-4">
            <label for="swal-code" class="block text-sm font-medium text-gray-700 mb-1">Código del Producto</label>
            <input type="text" id="swal-code" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" placeholder="Ej: TECH-001">
          </div>

           
          <div class="mb-4">
            <label for="swal-description" class="block text-sm font-medium text-gray-700 mb-1">Descripción</label>
            <textarea id="swal-description" rows="3" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" placeholder="Descripción detallada del producto"></textarea>
          </div>

           
          <div class="mb-4">
            <label for="swal-stock" class="block text-sm font-medium text-gray-700 mb-1">Stock</label>
            <input type="number" id="swal-stock" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" placeholder="Cantidad disponible">
          </div>

           
          <div class="mb-4">
            <label for="swal-category" class="block text-sm font-medium text-gray-700 mb-1">Categoría</label>
            <select id="swal-category" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white">
              <option value="">Seleccione una categoría</option>
              <option value="perifericos">Periféricos</option> 
              <option value="monitores">Monitores</option> 
              <option value="laptops">Laptops</option> 
              <option value="audio">Audio</option> 
              <option value="almacenamiento">Almacenamiento</option> 
              <option value="componentes">Componentes</option>
            </select>
          </div>

           
          <div class="mb-4">
            <label for="swal-image" class="block text-sm font-medium text-gray-700 mb-1">Imagen del Producto</label>
            <input type="file" id="swal-image" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white" accept="image/jpeg, image/webp" />
          </div>
          
        </div>
      </div>
    `,
    confirmButtonText: 'Agregar',
    showCancelButton: true,
    cancelButtonText: 'Cancelar',
    preConfirm: () => {
      const title = document.getElementById('swal-title').value;
      const price = document.getElementById('swal-price').value;
      const code = document.getElementById('swal-code').value;
      const description = document.getElementById('swal-description').value;
      const stock = document.getElementById('swal-stock').value;
      const category = document.getElementById('swal-category').value;
      const imageFile = document.getElementById('swal-image').files[0];

      if (!title || !price || !code || !description || !stock || !category || !imageFile) {
        Swal.showValidationMessage('Todos los campos son obligatorios');
        return false;
      }

       
      const formData = new FormData();
      formData.append('image', imageFile);

      return fetch('/uploadImage', {
        method: 'POST',
        body: formData
      })
        .then(response => response.json())
        .then(data => {
          const imagePath = data.imagePath;  
          return { title, price, code, description, stock, category, thumbnails: imagePath };
        })
        .catch(err => Swal.showValidationMessage('Error al subir la imagen: ' + err));
    }
  }).then((result) => {
    if (result.isConfirmed) {
      const product = result.value;
      socket.emit('addProduct', product);
      Swal.fire('Éxito', 'Producto agregado correctamente', 'success');
    }
  });
}


function editProduct(productId) {
  // Hacer una solicitud para obtener los detalles del producto
  fetch(`/api/products/${productId}`)
    .then(response => response.json())
    .then(product => {
      Swal.fire({
        title: 'Editar Producto',
        html: `
          <div class="bg-white p-6 rounded-lg shadow-md max-w-md mx-auto">
            <div class="space-y-4">
              <div class="mb-4">
                <label for="swal-title" class="block text-sm font-medium text-gray-700 mb-1">Título</label>
                <input type="text" id="swal-title" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" value="${product.title}">
              </div>
              <div class="mb-4">
                <label for="swal-price" class="block text-sm font-medium text-gray-700 mb-1">Precio</label>
                <input type="number" id="swal-price" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" value="${product.price}">
              </div>
              <div class="mb-4">
                <label for="swal-code" class="block text-sm font-medium text-gray-700 mb-1">Código del Producto</label>
                <input type="text" id="swal-code" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" value="${product.code}">
              </div>
              <div class="mb-4">
                <label for="swal-description" class="block text-sm font-medium text-gray-700 mb-1">Descripción</label>
                <textarea id="swal-description" rows="3" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500">${product.description}</textarea>
              </div>
              <div class="mb-4">
                <label for="swal-stock" class="block text-sm font-medium text-gray-700 mb-1">Stock</label>
                <input type="number" id="swal-stock" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" value="${product.stock}">
              </div>
              <div class="mb-4">
                <label for="swal-category" class="block text-sm font-medium text-gray-700 mb-1">Categoría</label>
                <select id="swal-category" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                  <option value="${product.category}" selected>${product.category}</option>
                  <option value="perifericos">Periféricos</option> 
                  <option value="monitores">Monitores</option> 
                  <option value="laptops">Laptops</option> 
                  <option value="audio">Audio</option> 
                  <option value="almacenamiento">Almacenamiento</option> 
                  <option value="componentes">Componentes</option>
                </select>
              </div>
              <div class="mb-4">
                <label for="swal-image" class="block text-sm font-medium text-gray-700 mb-1">Imagen del Producto</label>
                <input type="file" id="swal-image" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white" accept="image/jpeg, image/webp" />
              </div>
            </div>
          </div>
        `,
        confirmButtonText: 'Guardar cambios',
        showCancelButton: true,
        cancelButtonText: 'Cancelar',
        preConfirm: () => {
          const title = document.getElementById('swal-title').value;
          const price = document.getElementById('swal-price').value;
          const code = document.getElementById('swal-code').value;
          const description = document.getElementById('swal-description').value;
          const stock = document.getElementById('swal-stock').value;
          const category = document.getElementById('swal-category').value;
          const imageFile = document.getElementById('swal-image').files[0];

          let imagePath = product.thumbnails; // Valor por defecto: la imagen actual
          
          // Solo intentamos subir la imagen si se selecciona una nueva
          if (imageFile) {
            const formData = new FormData();
            formData.append('image', imageFile);

            return fetch('/uploadImage', {
              method: 'POST',
              body: formData
            })
            .then(response => response.json())
            .then(data => {
              imagePath = data.imagePath;  // Actualizar la ruta de la imagen
              return { title, price, code, description, stock, category, thumbnails: imagePath };
            })
            .catch(err => Swal.showValidationMessage('Error al subir la imagen: ' + err));
          }

          // Si no hay nueva imagen, simplemente devolvemos el producto con la imagen actual
          return { title, price, code, description, stock, category, thumbnails: imagePath };
        }
      }).then((result) => {
        if (result.isConfirmed) {
          const updatedProduct = result.value;
          socket.emit('updateProduct', { productId, updatedProduct });
          Swal.fire('Éxito', 'Producto actualizado correctamente', 'success');
        }
      });
    })
    .catch(err => Swal.fire('Error', 'No se pudo obtener los detalles del producto', 'error'));
}


 
function deleteProduct(id) {
  Swal.fire({
  title: "¿Desea eliminar el producto?",
  text: "No podrá recuperar este archivo",
  icon: "warning",
  showCancelButton: true,
  confirmButtonColor: "#3085d6",
  cancelButtonColor: "#d33",
  confirmButtonText: "Si",
  cancelButtonText: "No"
}).then((result) => {
  if (result.isConfirmed) {
  socket.emit('deleteProduct', id);
    Swal.fire({
      title: "Eliminado!",
      text: "El producto ah sido eliminado.",
      icon: "success"
    });
  }
});
}

function limpiarFormulario() {
   
  setTimeout(() => {
    const fields = ['title', 'price', 'code', 'description', 'stock', 'category', 'thumbnails'];
    fields.forEach(field => {
      const input = document.getElementById(`swal-${field}`);
      if (input) input.value = '';  
    });
  }, 500);  
}



socket.on('updateProducts', (products) => {
  const productList = document.getElementById('product-list');
  productList.innerHTML = `
    <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
      <tr>
        <th class="px-6 py-3 text-left text-sm font-medium uppercase tracking-wider">Título</th>
        <th class="px-6 py-3 text-left text-sm font-medium uppercase tracking-wider">Precio</th>
        <th class="px-6 py-3 text-left text-sm font-medium uppercase tracking-wider">Stock</th>
        <th class="px-6 py-3 text-left text-sm font-medium uppercase tracking-wider">Categoria</th>
        <th class="px-6 py-3 text-left text-sm font-medium uppercase tracking-wider">Descripcion</th>
        <th class="px-6 py-3 text-left text-sm font-medium uppercase tracking-wider">Acciones</th>
      </tr>
    </thead>
    <tbody>
    </tbody>
  `;

  const tbody = productList.querySelector('tbody');
  products.forEach(product => {
    tbody.innerHTML += `
      <tr class="hover:bg-gray-50 hover:bg-gray-50 dark:hover:bg-gray-600"> 
        <td class="px-6 py-4 text-sm text-gray-700 dark:text-gray-300  ">${product.title}</td>
        <td class="px-6 py-4 text-sm text-gray-700 dark:text-gray-300  ">$${product.price}</td>
        <td class="px-6 py-4 text-sm text-gray-700 dark:text-gray-300  ">${product.stock}</td>
        <td class="px-6 py-4 text-sm text-gray-700 dark:text-gray-300  ">${product.category}</td>
        <td class="px-6 py-4 text-sm text-gray-700 dark:text-gray-300  ">${product.description}</td>
        <td class="px-6 py-4 text-sm text-gray-700 dark:text-gray-300  "> 
        <div class="inline-flex rounded-md shadow-xs" role="group"> 
          <div class="inline-flex rounded-md shadow-xs" role="group">
            <button onclick="deleteProduct('{{this._id}}')" type="button" class="inline-flex items-center px-4 py-2 text-sm font-medium text-gray-900 bg-transparent border border-gray-900 rounded-s-lg hover:bg-gray-900 hover:text-white focus:z-10 focus:ring-2 focus:ring-gray-300 focus:bg-gray-900 focus:text-white dark:border-white dark:text-white dark:hover:text-white dark:hover:bg-gray-700 dark:focus:bg-gray-700">
              <svg class="w-6 h-6   dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">  
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 7h14m-9 3v8m4-8v8M10 3h4a1 1 0 0 1 1 1v3H9V4a1 1 0 0 1 1-1ZM6 7h12v13a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V7Z"/>
              </svg>

              Eliminar
            </button> 
            <button  onclick="editProduct('{{this._id}}')"  type="button" class="inline-flex items-center px-4 py-2 text-sm font-medium text-gray-900 bg-transparent border border-gray-900 rounded-e-lg hover:bg-gray-900 hover:text-white focus:z-10 focus:ring-2 focus:ring-gray-300 focus:bg-gray-900 focus:text-white dark:border-white dark:text-white dark:hover:text-white dark:hover:bg-gray-900 dark:focus:bg-gray-700">
              <svg class="w-6 h-6   dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">  
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m14.304 4.844 2.852 2.852M7 7H4a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h11a1 1 0 0 0 1-1v-4.5m2.409-9.91a2.017 2.017 0 0 1 0 2.853l-6.844 6.844L8 14l.713-3.565 6.844-6.844a2.015 2.015 0 0 1 2.852 0Z"/>
              </svg>

              Editar
            </button>
          </div> 
        </td>
      </tr>
    `;
  });

  limpiarFormulario();
});
 
 </script>
  <div class="container mx-auto p-6">
    <h1 class="mb-4 text-4xl font-extrabold leading-none text-center tracking-tight text-gray-900 md:text-5xl lg:text-6xl dark:text-white">Productos</h1>
 
 
     
    <button onclick="addProduct()"  type="button" class="py-2.5 px-5 me-2 mb-2 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-100 dark:focus:ring-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700">Agregar producto</button>
      <div class=" shadow-lg rounded-xl overflow-hidden mt-4">
<div class="relative overflow-x-auto shadow-md sm:rounded-lg">
    <table id="product-list"  class="w-full text-sm text-left rtl:text-right text-gray-800 dark:text-gray-400">
        <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
            <tr> 
              <th class="px-6 py-3 text-left text-sm font-medium uppercase tracking-wider">Título</th>
              <th class="px-6 py-3 text-left text-sm font-medium uppercase tracking-wider">Precio</th>
              <th class="px-6 py-3 text-left text-sm font-medium uppercase tracking-wider">Categoria</th>
              <th class="px-6 py-3 text-left text-sm font-medium uppercase tracking-wider">Stock</th>

              <th class="px-6 py-3 text-left text-sm font-medium uppercase tracking-wider">Acciones</th>
            </tr>
          </thead>
          <tbody class=" divide-y divide-gray-200    ">
            {{#each products}}
              <tr class="  hover:bg-gray-50 hover:bg-gray-50 dark:hover:bg-gray-600"> 
                <td class="px-6 py-4 text-sm text-gray-700 dark:text-gray-300 ">{{this.title}}</td>
                <td class="px-6 py-4 text-sm text-gray-700 dark:text-gray-300 ">$ {{this.price}}</td>
                <td class="px-6 py-4 text-sm text-gray-700 dark:text-gray-300 "> {{this.category}}</td>
                <td class="px-6 py-4 text-sm text-gray-700 dark:text-gray-300 "> {{this.stock}}</td>
                <td class="px-6 py-4 text-sm text-gray-700 dark:text-gray-300 ">

                    <div class="inline-flex rounded-md shadow-xs" role="group">


                      <div class="inline-flex rounded-md shadow-xs" role="group">
                        <button onclick="deleteProduct('{{this._id}}')" type="button" class="inline-flex items-center px-4 py-2 text-sm font-medium text-gray-900 bg-transparent border border-gray-900 rounded-s-lg hover:bg-gray-900 hover:text-white focus:z-10 focus:ring-2 focus:ring-gray-300 focus:bg-gray-900 focus:text-white dark:border-white dark:text-white dark:hover:text-white dark:hover:bg-gray-700 dark:focus:bg-gray-100">
 
                          <svg class="w-6 h-6   dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">  
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 7h14m-9 3v8m4-8v8M10 3h4a1 1 0 0 1 1 1v3H9V4a1 1 0 0 1 1-1ZM6 7h12v13a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V7Z"/>
                          </svg>

                          Eliminar
                        </button> 
                        <button  onclick="editProduct('{{this._id}}')"  type="button" class="inline-flex items-center px-4 py-2 text-sm font-medium text-gray-900 bg-transparent border border-gray-900 rounded-e-lg hover:bg-gray-900 hover:text-white focus:z-10 focus:ring-2 focus:ring-gray-300 focus:bg-gray-900 focus:text-white dark:border-white dark:text-white dark:hover:text-white dark:hover:bg-gray-700 dark:focus:bg-gray-700">
                          <svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m14.304 4.844 2.852 2.852M7 7H4a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h11a1 1 0 0 0 1-1v-4.5m2.409-9.91a2.017 2.017 0 0 1 0 2.853l-6.844 6.844L8 14l.713-3.565 6.844-6.844a2.015 2.015 0 0 1 2.852 0Z"/>
                          </svg>

                          Editar
                        </button>
                      </div>
 

                </td>
              </tr>
            {{/each}}
          </tbody>
        </table>
      </div>
    </div>
  </div>
